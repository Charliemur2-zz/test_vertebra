{"version":3,"sources":["CreateProviders.js","ActionButtons.js","Providers.js","ElementBox.js","App.js","index.js"],"names":["CreateProvider","props","handleChange","e","setState","form","state","target","name","value","showForm","modalInsertar","hideForm","insertElement","newElement","id","data","length","newData","push","console","log","bind","Button","color","onClick","this","show","Modal","isOpen","ModalHeader","ModalBody","FormGroup","className","readOnly","type","onChange","ModalFooter","React","Component","Edit","showFormEdit","modalEdit","hideFormEdit","providers","Providers","deleteElement","singledata","window","confirm","counter","list","forEach","item","splice","ID","Nit","Nombre","Representante_Legal","Direccion","Container","Table","map","elemento","ElementBox","toggleDiv","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9a3613e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Button } from 'reactstrap';\n\nclass CreateProvider extends React.Component {\n    // Constructor\n    constructor(props){\n        super(props);\n        console.log(props)\n        this.state = {\n            modalInsertar: false,\n            form: this.props.form \n        }\n        // bind methods to this\n        this.handleChange = this.handleChange.bind(this);\n        this.showForm = this.showForm.bind(this);\n        this.hideForm = this.hideForm.bind(this);\n        this.insertElement = this.insertElement.bind(this);\n\n    }\n    // handleChange methos to show change values\n    handleChange = (e) => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value,\n            }\n        });\n    }\n     // method to show the modal form\n    showForm = () => {\n        this.setState({ modalInsertar: true});\n    }\n    // method to hide modal form\n    hideForm = () => {\n        this.setState({ modalInsertar: false});\n    }\n    // method to insert new element in table\n    insertElement = () => {\n        let newElement = {...this.state.form};\n        newElement.id = this.props.data.length + 1;\n        let newData = this.props.data;\n        newData.push(newElement);\n        this.setState({ data: newData, modalInsertar: false});\n\n    }\n    render(){\n        return(\n            <div>\n                {/* Button to create new item */}\n                <Button color=\"primary\" onClick={this.showForm}>Crear</Button>\n                    {this.state.show && <CreateProvider/>}\n                {/* Modal form to insert new item */}\n                <Modal isOpen={this.state.modalInsertar}>\n                    <ModalHeader>\n                        <div>\n                            <h3>Inserte provedor</h3>\n                        </div>\n                    </ModalHeader>\n                    <ModalBody>\n                        <FormGroup>\n                            <label>Id:</label>\n                            <input className=\"form-control\" readOnly type=\"text\" value={this.props.data.length + 1}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Nit:</label>\n                            <input className=\"form-control\" name=\"Nit\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Nombre:</label>\n                            <input className=\"form-control\" name=\"Nombre\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Representante Legal:</label>\n                            <input className=\"form-control\" name=\"Representante_Legal\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Direccion:</label>\n                            <input className=\"form-control\" name=\"Direccion\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={this.insertElement}>Guardar</Button>{' '}\n                        <Button color=\"danger\" onClick={this.hideForm}>Cancelar</Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreateProvider;","import React from 'react';\nimport './App.css';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Button } from 'reactstrap';\n\nclass Edit extends React.Component {\n    // constructor\n    constructor(props){\n        super(props);\n        this.state = {\n            modalEdit: false,\n            form: this.props.form \n        }\n        console.log(this.props)\n        console.log(this.props.data)\n        // bind methods to this\n       /*  this.handleChange = this.handleChange.bind(this); */\n        this.showFormEdit = this.showFormEdit.bind(this);\n        this.hideFormEdit = this.hideFormEdit.bind(this);\n        /* this.insertElement = this.insertElement.bind(this);\n */\n    }\n    // handleChange methos to show change values\n    /* handleChange = (e) => {\n        this.setState({\n            form: {\n                ...this.state.form,\n                [e.target.name]: e.target.value,\n            }\n        });\n    } */\n    // method to show the modal form\n    showFormEdit = () => {\n        this.setState({ modalEdit: true});\n    }\n    // methos to hide modal form\n    hideFormEdit = () => {\n        this.setState({ modalEdit: false});\n    }\n    /* insertElement = () => {\n        let newElement = {...this.state.form};\n        newElement.id = this.props.data.length + 1;\n        let newData = this.props.data;\n        newData.push(newElement);\n        this.setState({ data: newData, modalEdit: false});\n    }  */\n    render() {\n        return(\n            <div>\n                {/* Button Edit */}\n                <Button color=\"primary\" onClick={this.showFormEdit}>Editar</Button>\n                    {this.state.show && <Edit/>}\n                {/* modal form to edit */}\n                <Modal isOpen={this.state.modalEdit}>\n                    <ModalHeader>\n                        <div>\n                            <h3>Editar provedor</h3>\n                        </div>\n                    </ModalHeader>\n                    <ModalBody>\n                        <FormGroup>\n                            <label>Id:</label>\n                            <input className=\"form-control\" readOnly type=\"text\" value={this.props.data.id}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Nit:</label>\n                            <input className=\"form-control\" name=\"Nit\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Nombre:</label>\n                            <input className=\"form-control\" name=\"Nombre\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Representante Legal:</label>\n                            <input className=\"form-control\" name=\"Representante_Legal\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                        <FormGroup>\n                            <label>Direccion:</label>\n                            <input className=\"form-control\" name=\"Direccion\" type=\"text\" onChange={this.handleChange}/>\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" >Editar</Button>{' '}\n                        <Button color=\"danger\" onClick={this.hideFormEdit} >Cancelar</Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </div>            \n        );\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport './App.css';\nimport { Table, Container, Button } from 'reactstrap';\nimport CreateProvider from './CreateProviders';\nimport Edit from './ActionButtons';\n\n// Temporal initial items\nconst providers =\n    [{\n        \"id\": 1,\n        \"Nit\": 96,\n        \"Nombre\": \"Nader-Thompson\",\n        \"Representante_Legal\": \"Ibby Pickwell\",\n        \"Direccion\": \"81259 Sauthoff Junction\"\n      }, {\n        \"id\": 2,\n        \"Nit\": 33,\n        \"Nombre\": \"Lakin-Gutmann\",\n        \"Representante_Legal\": \"Isahella Dyne\",\n        \"Direccion\": \"15012 Grim Trail\"\n      }, {\n        \"id\": 3,\n        \"Nit\": 95,\n        \"Nombre\": \"Tillman Group\",\n        \"Representante_Legal\": \"Michaella Landal\",\n        \"Direccion\": \"92324 Arkansas Lane\"\n      }, {\n        \"id\": 4,\n        \"Nit\": 88,\n        \"Nombre\": \"Stamm-Christiansen\",\n        \"Representante_Legal\": \"Bowie Colbourn\",\n        \"Direccion\": \"587 Forest Run Center\"\n      }, {\n        \"id\": 5,\n        \"Nit\": 60,\n        \"Nombre\": \"Grady-Christiansen\",\n        \"Representante_Legal\": \"Saw Rosenschein\",\n        \"Direccion\": \"8661 Bowman Park\"\n      }]\nclass Providers extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data: providers,\n      form: {\n        ID: '',\n        Nit: '',\n        Nombre: '',\n        Representante_Legal: '',\n        Direccion: ''\n      }\n    }\n  }\n  // method to delete item in table\n  deleteElement = (singledata) => {\n    let option = window.confirm(\"esta seguro de eliminar el registro\" + singledata.id);\n    if (option){\n      let counter = 0;\n      let list = this.state.data;\n      list.forEach((item) => {\n        if (item.id === singledata.id) {\n          list.splice(counter, 1);\n        }\n        counter++;\n      });\n      this.setState({data: list});\n    }\n  }\n  render(){\n      return(\n          <Container>\n              <CreateProvider data={this.state.data} form={this.state.form}/>\n              <br /> <br /> \n              <Table>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Nit</th>\n                    <th>Nombre</th>\n                    <th>Representante Legal</th>\n                    <th>Direccion</th>\n                    <th>Acciones</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.data.map((elemento) => (\n                    <tr>\n                      <td>{elemento.id}</td>\n                      <td>{elemento.Nit}</td>\n                      <td>{elemento.Nombre}</td>\n                      <td>{elemento.Representante_Legal}</td>\n                      <td>{elemento.Direccion}</td>\n                      <td><Edit data={this.state.data} form={this.state.form}/></td>\n                      <td><Button onClick={this.deleteElement.bind(null, elemento)}>Eliminar</Button></td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n          </Container>\n      );\n  }\n}\n\n\nexport default Providers;","import React from 'react';\nimport { Button, /*Dropdown, DropdownToggle, DropdownMenu, DropdownItem*/ } from 'reactstrap';\nimport Providers from './Providers';\n\nclass ElementBox extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            show: false\n        }\n        // bind methods to this\n        this.toggleDiv = this.toggleDiv.bind(this);    \n        \n    }\n    // method to show element table\n    toggleDiv = () => {\n        const { show } = this.state;\n        this.setState({ show: !show});\n    }\n    \n    render(){\n        return(\n            <div>\n                <Button color=\"secondary\" onClick={this.toggleDiv}>Provedores</Button>{' '}\n                {this.state.show && <Providers/>}\n                <Button color=\"secondary\">Productos</Button>{' '}\n                <Button color=\"secondary\">Tiendas</Button>{' '}\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n/*const ElementBox = (props) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n    state = {\n        divcontainer: false\n    }\n\n    return (\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n            <DropdownToggle caret>\n            Elije un Elemento\n            </DropdownToggle>\n            <DropdownMenu>\n            <DropdownItem text>Elementos</DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem>Productos</DropdownItem>\n            <DropdownItem>Provedores</DropdownItem>\n            <DropdownItem>Tiendas</DropdownItem>\n            </DropdownMenu>\n        </Dropdown>\n    );\n}*/\n\nexport default ElementBox;\n\n","import React from 'react';\nimport ElementBox from './ElementBox';\n\n// Principal app page\nclass App extends React.Component {\n  render(){\n    return(\n      <div className=\"App\">\n        <h1>CRUD Technical Test Vertebra</h1>\n        <ElementBox/>\n\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}